---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
        - name: order-service
          image: dejmartins/order-service:latest
          ports:
            - containerPort: 3000
          envFrom:
            - secretRef:
                name: bestbuy-secrets
            - configMapRef:
                name: bestbuy-config
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
spec:
  selector:
    app: order-service
  ports:
    - port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: makeline-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: makeline-service
  template:
    metadata:
      labels:
        app: makeline-service
    spec:
      containers:
        - name: makeline-service
          image: dejmartins/makeline-service:latest
          ports:
            - containerPort: 3001
          envFrom:
            - secretRef:
                name: bestbuy-secrets
            - configMapRef:
                name: bestbuy-config
---
apiVersion: v1
kind: Service
metadata:
  name: makeline-service
spec:
  selector:
    app: makeline-service
  ports:
    - port: 3001
      targetPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
    spec:
      containers:
        - name: product-service
          image: dejmartins/product-service:latest
          ports:
            - containerPort: 3002
---
apiVersion: v1
kind: Service
metadata:
  name: product-service
spec:
  selector:
    app: product-service
  ports:
    - port: 3002
      targetPort: 3002
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-front
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store-front
  template:
    metadata:
      labels:
        app: store-front
    spec:
      containers:
        - name: store-front
          image: dejmartins/store-front:latest
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: store-front
spec:
  selector:
    app: store-front
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
spec:
  serviceName: "mongodb"
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:6.0.6
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store-admin
  template:
    metadata:
      labels:
        app: store-admin
    spec:
      containers:
        - name: store-admin
          image: dejmartins/store-admin:latest
          ports:
            - containerPort: 8081
          env:
            - name: VITE_PRODUCT_SERVICE_URL
              value: "http://product-service:3002"
            - name: VITE_ORDER_SERVICE_URL
              value: "http://order-service:3000"
---
apiVersion: v1
kind: Service
metadata:
  name: store-admin
spec:
  selector:
    app: store-admin
  ports:
    - port: 80
      targetPort: 8081
  type: ClusterIP
